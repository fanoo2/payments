/* tslint:disable */
/* eslint-disable */
/**
 * Fanno Platform API
 * AI-driven platform automation API for agent orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@fanno.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Phase
 */
export interface Phase {
    /**
     * 
     * @type {number}
     * @memberof Phase
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Phase
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Phase
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof Phase
     */
    status: PhaseStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof Phase
     */
    progress: number;
    /**
     * 
     * @type {number}
     * @memberof Phase
     */
    order: number;
}


/**
 * @export
 */
export const PhaseStatusEnum = {
    Pending: 'pending',
    InProgress: 'in-progress',
    Complete: 'complete'
} as const;
export type PhaseStatusEnum = typeof PhaseStatusEnum[keyof typeof PhaseStatusEnum];


/**
 * Check if a given object implements the Phase interface.
 */
export function instanceOfPhase(value: object): value is Phase {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('progress' in value) || value['progress'] === undefined) return false;
    if (!('order' in value) || value['order'] === undefined) return false;
    return true;
}

export function PhaseFromJSON(json: any): Phase {
    return PhaseFromJSONTyped(json, false);
}

export function PhaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Phase {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'],
        'status': json['status'],
        'progress': json['progress'],
        'order': json['order'],
    };
}

export function PhaseToJSON(json: any): Phase {
    return PhaseToJSONTyped(json, false);
}

export function PhaseToJSONTyped(value?: Phase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'status': value['status'],
        'progress': value['progress'],
        'order': value['order'],
    };
}

