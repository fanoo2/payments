/* tslint:disable */
/* eslint-disable */
/**
 * Fanno Platform API
 * AI-driven platform automation API for agent orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@fanno.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AgentUpdateRequest
 */
export interface AgentUpdateRequest {
    /**
     * 
     * @type {string}
     * @memberof AgentUpdateRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentUpdateRequest
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentUpdateRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentUpdateRequest
     */
    status?: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof AgentUpdateRequest
     */
    config?: { [key: string]: any; };
    /**
     * 
     * @type {string}
     * @memberof AgentUpdateRequest
     */
    emoji?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentUpdateRequest
     */
    provider?: string;
}

/**
 * Check if a given object implements the AgentUpdateRequest interface.
 */
export function instanceOfAgentUpdateRequest(value: object): value is AgentUpdateRequest {
    return true;
}

export function AgentUpdateRequestFromJSON(json: any): AgentUpdateRequest {
    return AgentUpdateRequestFromJSONTyped(json, false);
}

export function AgentUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
        'description': json['description'] == null ? undefined : json['description'],
        'status': json['status'] == null ? undefined : json['status'],
        'config': json['config'] == null ? undefined : json['config'],
        'emoji': json['emoji'] == null ? undefined : json['emoji'],
        'provider': json['provider'] == null ? undefined : json['provider'],
    };
}

export function AgentUpdateRequestToJSON(json: any): AgentUpdateRequest {
    return AgentUpdateRequestToJSONTyped(json, false);
}

export function AgentUpdateRequestToJSONTyped(value?: AgentUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
        'description': value['description'],
        'status': value['status'],
        'config': value['config'],
        'emoji': value['emoji'],
        'provider': value['provider'],
    };
}

