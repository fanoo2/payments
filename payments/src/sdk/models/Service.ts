/* tslint:disable */
/* eslint-disable */
/**
 * Fanno Platform API
 * AI-driven platform automation API for agent orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@fanno.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Service
 */
export interface Service {
    /**
     * 
     * @type {number}
     * @memberof Service
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Service
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Service
     */
    status: ServiceStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof Service
     */
    lastCheck: Date;
}


/**
 * @export
 */
export const ServiceStatusEnum = {
    Healthy: 'healthy',
    Warning: 'warning',
    Error: 'error'
} as const;
export type ServiceStatusEnum = typeof ServiceStatusEnum[keyof typeof ServiceStatusEnum];


/**
 * Check if a given object implements the Service interface.
 */
export function instanceOfService(value: object): value is Service {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('lastCheck' in value) || value['lastCheck'] === undefined) return false;
    return true;
}

export function ServiceFromJSON(json: any): Service {
    return ServiceFromJSONTyped(json, false);
}

export function ServiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Service {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'status': json['status'],
        'lastCheck': (new Date(json['lastCheck'])),
    };
}

export function ServiceToJSON(json: any): Service {
    return ServiceToJSONTyped(json, false);
}

export function ServiceToJSONTyped(value?: Service | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'status': value['status'],
        'lastCheck': ((value['lastCheck']).toISOString()),
    };
}

