/* tslint:disable */
/* eslint-disable */
/**
 * Fanno Platform API
 * AI-driven platform automation API for agent orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@fanno.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Workflow
 */
export interface Workflow {
    /**
     * 
     * @type {number}
     * @memberof Workflow
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    fromAgent: string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    toAgent: string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    artifact: string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    status: WorkflowStatusEnum;
}


/**
 * @export
 */
export const WorkflowStatusEnum = {
    Pending: 'pending',
    Active: 'active',
    Complete: 'complete'
} as const;
export type WorkflowStatusEnum = typeof WorkflowStatusEnum[keyof typeof WorkflowStatusEnum];


/**
 * Check if a given object implements the Workflow interface.
 */
export function instanceOfWorkflow(value: object): value is Workflow {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('fromAgent' in value) || value['fromAgent'] === undefined) return false;
    if (!('toAgent' in value) || value['toAgent'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('artifact' in value) || value['artifact'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function WorkflowFromJSON(json: any): Workflow {
    return WorkflowFromJSONTyped(json, false);
}

export function WorkflowFromJSONTyped(json: any, ignoreDiscriminator: boolean): Workflow {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'fromAgent': json['fromAgent'],
        'toAgent': json['toAgent'],
        'description': json['description'],
        'artifact': json['artifact'],
        'status': json['status'],
    };
}

export function WorkflowToJSON(json: any): Workflow {
    return WorkflowToJSONTyped(json, false);
}

export function WorkflowToJSONTyped(value?: Workflow | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fromAgent': value['fromAgent'],
        'toAgent': value['toAgent'],
        'description': value['description'],
        'artifact': value['artifact'],
        'status': value['status'],
    };
}

