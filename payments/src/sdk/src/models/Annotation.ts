/* tslint:disable */
/* eslint-disable */
/**
 * Fanno Platform API
 * AI-driven platform automation API for agent orchestration
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@fanno.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AnnotationResultJson } from './AnnotationResultJson';
import {
    AnnotationResultJsonFromJSON,
    AnnotationResultJsonFromJSONTyped,
    AnnotationResultJsonToJSON,
    AnnotationResultJsonToJSONTyped,
} from './AnnotationResultJson';

/**
 * 
 * @export
 * @interface Annotation
 */
export interface Annotation {
    /**
     * Unique identifier for the annotation
     * @type {number}
     * @memberof Annotation
     */
    id: number;
    /**
     * Original text that was annotated
     * @type {string}
     * @memberof Annotation
     */
    inputText: string;
    /**
     * 
     * @type {AnnotationResultJson}
     * @memberof Annotation
     */
    resultJson: AnnotationResultJson;
    /**
     * When the annotation record was created
     * @type {Date}
     * @memberof Annotation
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the Annotation interface.
 */
export function instanceOfAnnotation(value: object): value is Annotation {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('inputText' in value) || value['inputText'] === undefined) return false;
    if (!('resultJson' in value) || value['resultJson'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function AnnotationFromJSON(json: any): Annotation {
    return AnnotationFromJSONTyped(json, false);
}

export function AnnotationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Annotation {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'inputText': json['inputText'],
        'resultJson': AnnotationResultJsonFromJSON(json['resultJson']),
        'createdAt': (new Date(json['createdAt'])),
    };
}

export function AnnotationToJSON(json: any): Annotation {
    return AnnotationToJSONTyped(json, false);
}

export function AnnotationToJSONTyped(value?: Annotation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'inputText': value['inputText'],
        'resultJson': AnnotationResultJsonToJSON(value['resultJson']),
        'createdAt': ((value['createdAt']).toISOString()),
    };
}

