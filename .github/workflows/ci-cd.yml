
name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: fanoo2/payments

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Build SDK
        run: npm run build

      - name: Start payments service in background
        run: npm run serve &

      - name: Wait for service to be ready
        run: npx wait-on http://localhost:5000/health

      - name: Run E2E Smoke Test
        run: node scripts/e2e-test.js

  version-and-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      version: ${{ steps.version.outputs.version }}
      sdk_version: ${{ steps.sdk_version.outputs.version }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Generate version and changelog
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Get SDK version
        id: sdk_version
        run: echo "version=$(node -p "require('./payments/src/sdk/package.json').version")" >> $GITHUB_OUTPUT

  publish-sdk:
    needs: [build-and-test, version-and-release]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build SDK
        run: npm run build

      - name: Publish SDK to NPM
        run: cd payments/src/sdk && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build-and-push-docker:
    needs: [build-and-test, version-and-release]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}},value=${{ needs.version-and-release.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.version-and-release.outputs.version }}
            type=semver,pattern={{major}},value=${{ needs.version-and-release.outputs.version }}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  notify-frontend:
    needs: [publish-sdk, version-and-release]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Dispatch to Frontend Repository
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.FRONTEND_REPO_TOKEN }}
          repository: fanoo2/frontend
          event-type: payments-sdk-updated
          client-payload: |
            {
              "sdk_version": "${{ needs.version-and-release.outputs.sdk_version }}",
              "service_version": "${{ needs.version-and-release.outputs.version }}",
              "package_name": "@fanno/payments-api-client",
              "registry": "https://registry.npmjs.org",
              "repository": "${{ github.repository }}",
              "commit_sha": "${{ github.sha }}"
            }

      - name: Notify Orchestrator
        env:
          ORCHESTRATOR_URL: ${{ secrets.ORCHESTRATOR_URL }}
          SDK_VERSION: ${{ needs.version-and-release.outputs.sdk_version }}
        run: |
          curl -X POST "$ORCHESTRATOR_URL/agent-events" \
            -H "Content-Type: application/json" \
            -d '{
              "agent": "payment-specialist",
              "status": "completed",
              "version": "'"${SDK_VERSION}"'",
              "package": "@fanno/payments-api-client",
              "registry": "https://registry.npmjs.org"
            }'
