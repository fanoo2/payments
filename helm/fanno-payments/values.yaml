# Default values for fanno-payments
replicaCount: 2

image:
  repository: fanno/payments
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  port: 5000
  targetPort: 5000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: payments.fanno.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env:
  - name: NODE_ENV
    value: "production"
  - name: PORT
    value: "5000"

livenessProbe:
  httpGet:
    path: /health
    port: 5000
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /health
    port: 5000
  initialDelaySeconds: 5
  periodSeconds: 5

# Config for external services
config:
  stripe:
    # Option 1: Provide secret key directly (not recommended for production)
    secretKey: ""
    # Option 2: Use existing Kubernetes secret (recommended)
    existingSecret: ""
    existingSecretKey: "stripe-secret-key"
  orchestrator:
    url: ""

# Additional environment variables
extraEnvVars: []
#  - name: CUSTOM_VAR
#    value: "custom-value"
#  - name: SECRET_VAR
#    valueFrom:
#      secretKeyRef:
#        name: my-secret
#        key: secret-key

# External secrets (if using external-secrets operator)
externalSecrets:
  enabled: false
  secretStore: ""
  data: []
  #  - secretKey: stripe-secret-key
  #    remoteRef:
  #      key: stripe-secret
  #      property: secret_key